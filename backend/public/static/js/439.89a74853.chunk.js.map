{"version":3,"file":"static/js/439.89a74853.chunk.js","mappings":"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","sources":["pictures/pages/NewPicture.js","webpack://frontend/./src/shared/components/UIElements/Input.module.css?b647","shared/components/UIElements/Input.js","webpack://frontend/./src/shared/components/UIElements/Wrapper.module.css?08b1","shared/components/UIElements/Wrapper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useRef, useState, useContext } from \"react\";\r\n\r\nimport {AuthContext} from \"../../shared/context/auth-context.js\";\r\nimport Wrapper from \"../../shared/components/UIElements/Wrapper.js\";\r\nimport Input from \"../../shared/components/UIElements/Input.js\";\r\n\r\nconst NewPicture = () => {\r\n  //-----------------------------------------------------------------------------------------------------------------------------hooks-part\r\n  const logCtx = useContext(AuthContext);\r\n  const refTitle = useRef(\"\");\r\n  const refDescription = useRef(\"\");\r\n  const refAddress = useRef(\"\");\r\n  const refImage = useRef();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [successAlertVisibility, setSuccessAlertVisibility] = useState(false);\r\n  const [inputValidation, setInputValidation] = useState({\r\n    titleCssClasses: \"\",\r\n    descriptionCssClasses: \"\",\r\n    imageCssClasses: \"\",\r\n    wrongInputsAlertVisibility: false,\r\n    wrongInputsAlertMessage: \"\",\r\n  });\r\n  //-----------------------------------------------------------------------------------------------------------------------------errorHandler\r\n  const errorHandler = (errorMessage) => {\r\n    setIsLoading(false);\r\n    setInputValidation((prevInputValidation) => ({\r\n      ...prevInputValidation,\r\n      wrongInputsAlertVisibility: true,\r\n      wrongInputsAlertMessage: errorMessage,\r\n    }));\r\n    setTimeout(() => {\r\n      setInputValidation((prevInputValidation) => ({\r\n        ...prevInputValidation,\r\n        wrongInputsAlertVisibility: false,\r\n      }));\r\n    }, 5000);\r\n  };\r\n  //-----------------------------------------------------------------------------------------------------------------------------onSubmitHandler\r\n  const onSubmitHandler = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      if (\r\n        refTitle.current.value.trim().length >= 3 &&\r\n        refDescription.current.value.trim().length >= 10 &&\r\n        refImage.current.files[0] !== undefined\r\n      ) {\r\n        const formData = new FormData();\r\n        formData.append(\"title\", refTitle.current.value);\r\n        formData.append(\"description\", refDescription.current.value);\r\n        formData.append(\"address\", refAddress.current.value);\r\n        formData.append(\"image\", refImage.current.files[0]);\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}pictures/`,\r\n          {\r\n            method: \"POST\",\r\n            body: formData,\r\n            headers: {\r\n              Authorization: `Bearer ${logCtx.token}`\r\n            },\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        setIsLoading(false);\r\n        if (response.ok) {\r\n          // this response give us the new posted picture\r\n          setSuccessAlertVisibility(true);\r\n          setTimeout(() => {\r\n            setSuccessAlertVisibility(false);\r\n          }, 5000);\r\n          //reset the form & the css classes of validation\r\n          refTitle.current.value = \"\";\r\n          refDescription.current.value = \"\";\r\n          refAddress.current.value = \"\";\r\n          refImage.current.value = \"\";\r\n          setInputValidation({\r\n            titleCssClasses: \"\",\r\n            descriptionCssClasses: \"\",\r\n            imageCssClasses: \"\",\r\n            wrongInputsAlertVisibility: false,\r\n            wrongInputsAlertMessage: \"\",\r\n          });\r\n        } else {\r\n          //error from backend validation...\r\n          errorHandler(data.message);\r\n          console.log(data); // failed to post the pic try again...\r\n        }\r\n      } else {\r\n        //error from frontend validation...\r\n        errorHandler(\"Please Enter a Valid Inputs Value\");\r\n      }\r\n    } catch (error) {\r\n      errorHandler(\"Failed to fetch\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  //-----------------------------------------------------------------------------------------------------------------------------return(JSX)\r\n  return (\r\n    <Wrapper>\r\n      {inputValidation.wrongInputsAlertVisibility && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          <i className=\"bi bi-exclamation-octagon-fill m-1\"></i>\r\n          {inputValidation.wrongInputsAlertMessage}\r\n        </div>\r\n      )}\r\n      {successAlertVisibility && (\r\n        <div className=\"alert alert-success\" role=\"alert\">\r\n          <i className=\"bi bi-send-check m-1\"></i>\r\n          Picture Added Successfully\r\n        </div>\r\n      )}\r\n      <Input\r\n        ref={refTitle}\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"picture title...\"\r\n        label=\"Picture Title : \"\r\n        cssClasses={inputValidation.titleCssClasses}\r\n        onBlur={() => {\r\n          setInputValidation((prevCssClasses) => ({\r\n            ...prevCssClasses,\r\n            titleCssClasses:\r\n              refTitle.current.value.trim().length >= 3\r\n                ? \"is-valid\"\r\n                : \"is-invalid\",\r\n          }));\r\n        }}\r\n      />\r\n      <Input\r\n        ref={refDescription}\r\n        type=\"text\"\r\n        name=\"description\"\r\n        placeholder=\"picture description...\"\r\n        label=\"Picture Description : \"\r\n        cssClasses={inputValidation.descriptionCssClasses}\r\n        onBlur={() => {\r\n          setInputValidation((prevCssClasses) => ({\r\n            ...prevCssClasses,\r\n            descriptionCssClasses:\r\n              refDescription.current.value.trim().length >= 10\r\n                ? \"is-valid\"\r\n                : \"is-invalid\",\r\n          }));\r\n        }}\r\n      />\r\n      <Input\r\n        ref={refAddress}\r\n        type=\"text\"\r\n        name=\"address\"\r\n        placeholder=\"picture address...\"\r\n        label=\"Picture Address : \"\r\n      />\r\n\r\n      <Input\r\n        ref={refImage}\r\n        type=\"file\"\r\n        name=\"image\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        label=\"Picture : \"\r\n        cssClasses={inputValidation.imageCssClasses}\r\n        onChange={() => {\r\n          setInputValidation((prevCssClasses) => ({\r\n            ...prevCssClasses,\r\n            imageCssClasses:\r\n              refImage.current.files[0] === undefined\r\n                ? \"is-invalid\"\r\n                : \"is-valid\",\r\n          }));\r\n        }}\r\n      />\r\n      <button\r\n        className=\"btn btn-info\"\r\n        onClick={onSubmitHandler}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <>\r\n            <span\r\n              className=\"spinner-border spinner-border-sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            Loading...\r\n          </>\r\n        ) : (\r\n          \"post\"\r\n        )}\r\n      </button>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default NewPicture;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main_input\":\"Input_main_input__392n6\"};","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={`mb-3 ${classes.main_input}`}>\r\n      <label htmlFor={props.name} className=\"form-label\">\r\n        {props.label}\r\n      </label>\r\n      <input\r\n        onBlur={props.onBlur}\r\n        onChange={props.onChange}\r\n        ref={ref}\r\n        type={props.type}\r\n        className= {`form-control ${props.cssClasses}`}\r\n        id={props.name}\r\n        defaultValue={props.defaultValue}\r\n        placeholder={props.placeholder}\r\n        accept={props.accept}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Wrapper_wrapper__eIb1h\"};","import React from 'react';\r\n\r\nimport classes from \"./Wrapper.module.css\";\r\n\r\n\r\nconst Wrapper = (props) => {\r\n  return (\r\n    <div className={classes.wrapper}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["logCtx","useContext","AuthContext","refTitle","useRef","refDescription","refAddress","refImage","useState","isLoading","setIsLoading","successAlertVisibility","setSuccessAlertVisibility","titleCssClasses","descriptionCssClasses","imageCssClasses","wrongInputsAlertVisibility","wrongInputsAlertMessage","inputValidation","setInputValidation","errorHandler","errorMessage","prevInputValidation","setTimeout","onSubmitHandler","current","value","trim","length","undefined","files","formData","FormData","append","fetch","process","method","body","headers","Authorization","token","response","json","data","ok","message","console","log","className","role","ref","type","name","placeholder","label","cssClasses","onBlur","prevCssClasses","accept","onChange","onClick","disabled","React","props","classes","htmlFor","id","defaultValue","children","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}